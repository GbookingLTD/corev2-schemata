{
	"info": {
		"_postman_id": "036c3fc1-9f2a-aa9f-790c-f5ac7cf1dd66",
		"name": "GBooking API для онлайн-записи",
		"description": "GBooking API — это стандартный json-rpc2 api,  поддерживающий множество операций управления данными бизнеса, клиентов, предоставления статистики, бронирования времени и многое другое. Он проверяет acl роли пользователя для каждого запроса через параметры ```` \"cred\": {\"user\": \"...\", \"token\": \"...\"} ````. \n\nВ данной документации представлены примеры запросов для тестового окружения. Вы можете выполнять их при разработке.\n\nПример запроса:\n````\n{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"method\":\"business.get_top_services\",\n   \"params\":{\n      \"business\":{\n         \"id\":\"4000000001992\"\n      }\n   },\n   \"cred\":{\n      \"token\":\"...\",\n      \"user\":\"...\"\n   }\n}\n````\n\n* __jsonrpc__ — версия протокола (2.0)\n* __id__ — значение числового типа для идентификации запроса на сервере\n* __method__ — название вызываемого метода\n* __params__ — массив параметров для вызываемого метода\n* __cred__ — набор данных для идентификации и авторизации\n\n\nПример успешного ответа:\n````\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"status\": true,\n        \"services\": []\n    }\n}\n````\n\nПример ответа с ошибкой:\n````\n{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"error\":{\n      \"code\":-10200,\n      \"message\":\"Failed to retrieve business\",\n      \"data\":\"\"\n   }\n}\n````\n\nВсе запросы по уровню доступа разделяются на несколько базовых ролей:\n* __guest__ — публичный запрос без указания параметров доступа\n* __client__ — запрос предоставляет, управляет данными конкретного клиента\n* __admin__ — запрос имеет доступ к данным бизнеса или некоторого набора бизнесов\n\nДля каждого запроса указана его роль доступа в описании. Возможно несколько ролей доступа. В этом случае запрос возвращает различную информацию.\n\nДля онлайн-записи используются публичные методы* с ролью _guest_.\n\n----\n_* за исключения метода резервирования записи через витрину. В этом случае самый простой способ авторизации — это получить long live token в Бэкофисе витрины._\n\n\n## Глоссарий\n\nВ основе _GBooking API для онлайн записи_ лежит несколько сущностей:\n* __Бизнес__ содержит полные данные о бизнесе:\n\t* список работников\n\t* список услуг\n\t* настройки отображения виджета GBooking\n\t* настройки отображения БекОфиса GBooking\n\t* информацию о бизнесе (название, адрес, телефон, график работы)\n\t* список других филиалов сети\n* __Бизнес-филиал__, __Филиал__ представляет данные одного отделения, филиала, торговой точки, салона и т.д. \n* __Бизнес-витрина__, __Витрина__ представляет доступ к данным произвольного набора бизнесов-филиалов\n* __Сеть филиалов__ — набор бизнесов-филиалов, объединённых в одну сущность. На виджете GBooking пользователь может перейти из одного филиала на другой или получить данные по всем филиалам. В Бекофисе администратор, обладающий достаточными правами, сможет переключаться между филиалами. Данные по клиентам в сети филиалов общие.\n* __Работник__ содержит данные работника:\n\t* полное имя\n\t* список услуг, которые он выполняет\n\t* скорости выполения услуг\n\t* отделение\n\t* телефон, email\n\t* дополнительную текстовую информацию — профессию, описание работника\n* __Услуга__, __Таксономия__ — услуга или категория услуг, на которую можно записаться. Содержит название, описание, длительность (опционально для каждого работника), цена, скидки.\n* __Слот расписания__ — временной интервал, на который возможна запись\n* __Запись__ — сущность в расписании, в которой указан _клиент_, _работник_, _дата начала_, _общая длительность_, _список услуг_, _оплатил ли клиент услуги_ и другая информация \n* __Клиент__ содержит данные клиента одного бизнеса или сети филиалов\n\nДетальную информацию о схеме данных вы можете посмотреть в данном репозитории http://git.dev.gbooking.ru/gbooking/corev2-schemata/tree/master/doc.\n\nСхемы данных в формате json-schema содержатся здесь http://git.dev.gbooking.ru/gbooking/corev2-schemata/tree/master/schemas.\n\nКоды ошибок:\n* [полный список ошибок](http://git.dev.gbooking.ru/gbooking/corev2-schemata/blob/master/schemas/errors.md)\n* [ошибки авторизации](http://git.dev.gbooking.ru/gbooking/corev2-schemata/blob/master/schemas/common/partials/authErrorCodes.yaml)\n* [ошибки от внешних систем](http://git.dev.gbooking.ru/gbooking/corev2-schemata/blob/master/schemas/misErrors.md)\n* Для каждого метода указаны списки ошибок, который он может вернуть\n\nНа текущий момент (02.10.2018) описаны формат запроса/ответа для следующих методов:\n* Получение данных бизнеса (business.get_profile_by_id)\n* Добавление клиента (client.add_client)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Получение данных бизнеса",
			"item": [
				{
					"name": "Получение статических данных бизнеса",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":1,\r\n   \"cred\":{\r\n      \"token\":\"{{Token}}\",\r\n      \"user\":\"{{UserID}}\"\r\n   },\r\n   \"method\":\"business.get_profile_by_id\",\r\n   \"params\":{\r\n      \"business\":{\r\n         \"id\":\"{{BusinessID}}\"\r\n      },\r\n      \"with_networks\":true,\r\n   \t  \"worker_sorting_type\": \"workload\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__, __admin__.\n\nСхема бизнеса содержит большое количество данных. Для отображения виджета нас в первую очередь интересуют\n* Список услуг — массив taxonomies\n* Список ресурсов — массив resources\n\nПсевдокод для отображения списка специалистов:\n\n````\nfunction renderWorkers(business) {\n  for (worker in business.resources) {\n    if (worker.status === \"ACTIVE\" && worker.displayInWidget) {\n      render(worker);\n    }\n  }\n}\n````\n\nЗдесь business — это данные, полученные из запроса.\n\nУ каждого работника может быть поле __scheduleIsEmpty__. Если оно равно __true__, то работник не имеет свободного расписания. В этом случае, можно не показывать работника или показывать сообщение о том, что запись к работнику недоступна.\n\nТак же возможна ситуация, когда у работника нет свободного расписания для определённой услуги, которую он выполняет. В таком случае поле __scheduleIsEmpty__ не будет равно __true__ (тк. расписание есть, но для других услуг). Вы можете использовать запрос на _получение даты ближайшего приёма_, чтобы уточнить имеется ли расписание по конкретной услуге у работника.\n\n\nПараметр __worker_sorting_type__ в теле запроса — тип сортировки работников. Оно принимает одно из возможных значений \n* \"none\" (как есть)\n* \"workload\" (по загруженности, от наименее загруженных)\n* \"most_free\" (по дате ближайшего приёма)\n\nСортировка работников производится по увеличению значения индекса order в массиве resources (другими словами resources[i].order).\n\nПараметр __only_active_workers__ в теле запроса указывает, что необходимо вернуть только активных работников, на которые возможна запись. \n\nПараметр __show_inactive_workers__ в теле запроса указывает, что необходимо вернуть всех работников, в том числе и неактивных. \n\nПо умолчанию, для запроса с типом доступа __guest__ возвращаются только активные работники, для запроса с типом доступа __admin__ — все работники. \n\nЗапрос предоставляет информацию по всем бизнесам/филиалам сети в поле \"networks\", если передать параметр __with_networks__. Эти данные должны быть использованы совместно с запросом business.get_network_data.\n\nИнформация по ценам услуг находится в массиве taxonomies.\n\nПосмотрите описание данных [json-schema](http://git.dev.gbooking.ru/gbooking/corev2-schemata/blob/master/schemas/models/business.yaml) (там есть описания полей)\n - BusinessTaxonomyPrice - для поля price\n - AdditionalBusinessTaxonomyPrice - для поля additionalPrices\n\nВ поле price содержится цена по умолчанию (если не найдено цены для работника в additionalPrices). На основе additionalPrices и price можно вычислить интервал цен - \"от .. до ..\" - минимум/максимум цены за услугу (с учётом поля price).\n\nЕсли поле price.amount равно \"0\", то значит цена для данной услуги не определена.\n\n\n### Бизнес-витрина\n\nЕсть следующие изменения в схеме данных бизнеса (данные, приходящие в ответ):\n* __business.general_info.isShowcase__ должен быть установлен true для витрины\n* __business.resources[i].origin_general_info__ хранит информацию о бизнесе филиале, в котором принимает работник (см скриншот 1 - данные по филиалам в списке работников получены именно из этого поля)\n* __business.resources[i].originBusinessID__ — идентификатор бизнеса филиала\n* __business.resources[i].originTaxonomyIDs__ — идентификаторы услуг (массив), через которые работник оказался в витрине (поскольку из одного филиала не может быть 2 или более услуг, привязанных к одной услуге витрины, то элемент может быть только один и, с другой стороны, его наличие гарантировано)\n* __business.taxonomies[i].showcases__ — идентификаторы связей витрин\n\nОбратите внимание, в массиве __business.resources[i].taxonomies__ для каждого работника указаны идентификаторы услуг витрины. Поэтому вы можете оперировать данными как если бы они были локальными — как если бы это был один бизнес филиал."
					},
					"response": []
				},
				{
					"name": "Получение сети филиалов",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{},\n   \"method\":\"business.get_network_data\",\n   \"params\":{\n      \"networkID\":{{NetworkID}}\n   }\n}\n"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__.\n\nС помощью данного метода вы можете получить список _идентификаторов_ филиалов, которые доступны для записи по заранее оговорённому источнику или источнику _GENERAL_.\n\n\nСписок данных по филиалам предоставляется через rpc метод __business.get_profile_by_id__, выполненный с параметром __with_networks__ для одного из филиалов сети. Данные по филиалам возвращаются в поле __networks__ и содержат минимально необходимые данные для отображения списка филиалов.\n\n\nЧтобы получить список идентификаторов филиалов сети нужно взять данные из __networkWidgetConfiguration__ по источнику, который был вам присвоен или источнику _GENERAL_."
					},
					"response": []
				}
			],
			"description": "На первом шаге необходимо получить данные по работникам и услугам, а так же детальную информацию о бизнесе — название, адрес, координаты, телефон, время работы и другое.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d7bf0c6f-c423-4b69-9e86-985c36e887d7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6f5ad6e5-c3f2-4272-a432-9eb3223a4f31",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Получение расписания",
			"item": [
				{
					"name": "Получение расписания из CRAC (deprecated)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"cred\": {},\n    \"method\": \"Crac.GetCRACResourcesAndRooms\",\n    \"params\": [{\n        \"business\": {\n            \"id\": \"{{BusinessID}}\"\n        },\n        \"filters\": {\n            \"resources\": [\"59f05563854202eb6f86569c\"],\n            \"date\": {\n                \"from\": \"2017-11-01T00:00:00.000Z\",\n                \"to\": \"2017-11-30T00:00:00.000Z\"\n            }\n        }\n    }]\n}\n"
						},
						"url": {
							"raw": "{{CRAC_URL}}",
							"host": [
								"{{CRAC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__.\n\nИспользуйте запросы \"_Получение слотов расписания ..._\""
					},
					"response": []
				},
				{
					"name": "Получение слотов расписания витрины",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n\n   },\n   \"method\":\"CracSlots.GetCRACDistributedResourcesAndRooms\",\n   \"params\":\n      {\n         \"business\":{\n            \"id\":\"4000000006304\",\n            \"widget_configuration\": {\n            \t\"cracServer\": \"CRAC_PROD3\"\n            },\n            \"general_info\": {\n            \t\"timezone\": \"Europe/Moscow\"\n            }\n         },\n         \"filters\":{\n            \"resources\":[\n               {\n                  \"resource\":\"5afafb9fc28333643ea29636\",\n                  \"business\":{\n                     \"id\":\"4000000006291\"\n                  }\n               },\n               {\n                  \"resource\":\"5afafb9fc28333643ea2963a\",\n                  \"business\":{\n                     \"id\":\"4000000006291\"\n                  }\n               },\n               {\n                  \"resource\":\"5afafb9fc28333643ea2963c\",\n                  \"business\":{\n                     \"id\":\"4000000006291\"\n                  }\n               }\n            ],\n            \"taxonomies\":[\n               \"9175610\"\n            ],\n            \"rooms\":[\n\n            ],\n            \"date\":{\n               \"from\":\"2018-09-06T00:00:00.000Z\",\n               \"to\":\"2018-09-10T00:00:00.000Z\"\n            }\n         }\n      }\n}"
						},
						"url": {
							"raw": "{{CRAC_SLOTS_URL}}",
							"host": [
								"{{CRAC_SLOTS_URL}}"
							]
						},
						"description": "Роль доступа: __guest__.\n\nДанный запрос отдает набор слотов готовых для рендеринга в расписании, а также для резервирования записи на них.\n\nВ данном запросе поле business содержит объект со следующими полями:\n* __business.id__ - идентификатор бизнеса витрины\n* __business.widget_configuration.cracServer__ - алиас CRAC сервера\n* __business.widget_configuration.mostFreeEnable__ - возвращает дату ближайшего приема для каждого работника\n* __business.general_info.timezone__ - временная зона бизнеса\n\nВсе эти поля необходимо предварительно получить из запроса __business.get_profile_by_id__ (см. выше) и передать как есть. В дальнейшем, при возможном расширении схемы данных этого запроса формат поля __business__ останется совместимым с форматов данных из запроса __business.get_profile_by_id__."
					},
					"response": []
				},
				{
					"name": "Получение слотов расписания филиала",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n\n   },\n   \"method\":\"CracSlots.GetCRACResourcesAndRooms\",\n   \"params\":\n      {\n         \n         \"business\":{\n            \"id\":\"4000000006289\",\n            \"widget_configuration\": {\n            \t\"cracServer\": \"CRAC_PROD3\",\n            \t\"mostFreeEnable\": true\n            },\n            \"general_info\": {\n            \t\"timezone\": \"Europe/Moscow\"\n            }\n         },\n         \"filters\":{\n            \"resources\":[\n               {\"id\": \"5afafbc373b6066443311f24\", \"duration\": 30},\n               {\"id\": \"5afafbc373b6066443311f26\", \"duration\": 30}\n            ],\n            \"taxonomies\":[\n               \"9175163\"\n            ],\n            \"rooms\":[\n\n            ],\n            \"date\":{\n               \"from\":\"2018-07-13T00:00:00.000Z\",\n               \"to\":\"2018-07-17T00:00:00.000Z\"\n            }\n         }\n      }\n   \n}"
						},
						"url": {
							"raw": "{{CRAC_SLOTS_URL}}",
							"host": [
								"{{CRAC_SLOTS_URL}}"
							]
						},
						"description": "Роль доступа: __guest__.\n\nДанный запрос отдает набор слотов готовых для рендеринга в расписании, а также для резервирования записи на них.\n\nДля получения длительностей выполнения услуги см __getServiceDuration__ (_Получение даты ближайшего приёма из CRAC для филиала_)."
					},
					"response": []
				},
				{
					"name": "Получение даты ближайшего приёма витрины",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"id\":9,\n    \"cred\":{\n\n    },\n    \"method\":\"Crac.CRACDistributedResourcesFreeByDate\",\n    \"params\":[\n        {\n            \"business\":{\n                \"id\":\"4000000006304\"\n            },\n            \"taxonomy\":{\n                \"id\":\"9175167\"\n            },\n            \"resources\":[\n                \"5afafbc373b6066443311f24\",\n                \"5afafbdaff64a76438ecde86\",\n                \"5afafb9fc28333643ea29636\",\n                \"5afafb9fc28333643ea2963c\",\n                \"5afafb9fc28333643ea29638\",\n                \"5afafbc373b6066443311f26\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{CRAC_URL}}",
							"host": [
								"{{CRAC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__.\n\nВозвращает даты ближайшего приёма на услугу для списка работников. Запрос для бизнеса-витрины.\n\nВходные параметры (__params__):\n* __business.id__ - идентификатор бизнеса-витрины\n* __taxonomy.id__ - идентификатор таксономии (услуги) витрины\n* __resources__ - список идентификаторов работников\n\nВсе идентификаторы относятся только к данным витрины.\n\nВ ответе приходит в поле `result.Free` массив объектов. Каждый элемент содержит сделующие свойства:\n* __resource__ - идентификатор ресурса\n* __taxonomy__ - идентификатор таксономии\n* __date__ - дата ближайшего приёма в ISO формате (часы, минуты, секунды заполнены нулями)\n* __maxFreeMinutes__ - количество минут, длительность самого продолжительного свободного интервала времени в расписании работника за указанный день\n\nДата ближайшего приёма считается исходя из длительности выполнения услуги каждым из работников. Она сравнивается с __maxFreeMinutes__. Находится ближайший день, у которого длительность выполнения услуги меньше, чем параметр __maxFreeMinutes__. Его и считаем датой ближайшего приёма (параметр __date__).\n\nЕсли в ответе содержится элемент с такими полями _\"date\": \"0001-01-01T00:00:00Z\", \"maxFreeMinutes\": 0_, то данный работник не имеет свободного расписания по указанной услуге.\n\nОбратите внимание, что если вам нужно сделать сортировку по дате ближайшего приёма это удобнее сделать через параметр __worker_sorting_type__ запроса на получение статических данных бизнеса __business.get_profile_by_id__. Сортировка работников производится по увеличению значения индекса order в массиве resources (другими словами resources[i].order)."
					},
					"response": []
				},
				{
					"name": "Получение даты ближайшего приёма филиала",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"id\":1,\n    \"cred\":{\n\n    },\n    \"method\":\"Crac.CRACResourcesFreeByDate\",\n    \"params\":[\n        {\n            \"taxonomy\":{\n                \"id\":\"9175163\"\n            },\n            \"resources\":[\n                \"5afafbc373b6066443311f24\",\n                \"5afafbc373b6066443311f26\"\n            ],\n            \"duration\":60\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{CRAC_URL}}",
							"host": [
								"{{CRAC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__.\n\nВозвращает даты ближайшего приёма на услугу для списка работников. Запрос для бизнеса-филиала.\n\nВходные параметры (__params__):\n* __duration__ - продолжительность выполнения услуги работником\n* __taxonomy.id__ - идентификатор таксономии (услуги) витрины\n* __resources__ - список идентификаторов работников\n\nФормат данных в ответе см. запрос для витрины.\n\nДлительность выполнения услуги можете взять максимальную из длительностей по каждому из переданных работников. \n\nСледующий код на javascript показывает, как посчитать длительность выполнения услуги каждым работником:\n\n````javascript\nexport function getServiceDuration(taxonomy, resource) {\n  if (resource) {\n    var taxLevel = (_.find(resource.taxonomyLevels, {id: taxonomy.id}) || {}).level;\n    if (typeof taxLevel !== 'undefined') {\n      var level = _.find(taxonomy.additionalDurations, {level: taxLevel});\n      if (level) {\n        return level.duration ? level.duration : taxonomy.duration;\n      }\n    }\n  }\n  return taxonomy.duration;\n}\n````\n\nДанный код применим и для запроса на получение слотов."
					},
					"response": []
				}
			],
			"description": "Для получения слотов расписания необходимо сначала получить данные бизнеса с помощью запроса __business.get_profile_by_id__.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a594650f-8bae-46cb-bdc5-16532ffab7ff",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d1d3cc1c-d6d6-4070-a109-e7d0537261f1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Запись",
			"item": [
				{
					"name": "Резервирование записи",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":19,\r\n   \"cred\":{\r\n      \"token\":\"{{Token}}\",\r\n      \"user\":\"{{UserID}}\"\r\n   },\r\n   \"method\":\"appointment.reserve_appointment\",\r\n   \"params\":{\r\n      \"appointment\":{\r\n         \"start\":\"2016-08-19T15:00:00\",\r\n         \"duration\":30,\r\n         \"price\":{\r\n            \"amount\":0,\r\n            \"currency\":\"RUB\"\r\n         }\r\n      },\r\n      \"source\":\"{{Source}}\",\r\n      \"business\":{\r\n         \"id\":\"{{BusinessID}}\"\r\n      },\r\n      \"taxonomy\":{\r\n         \"id\":\"9073638\"\r\n      },\r\n      \"client_appear\":\"NONE\",\r\n      \"resource\":{\r\n         \"id\":\"57b463de610c56383014c344\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__, __admin__ (для витрины)."
					},
					"response": []
				},
				{
					"name": "Резервирование записи с услугой из витрины",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":19,\r\n   \"cred\":{\r\n   },\r\n   \"method\":\"appointment.reserve_appointment\",\r\n   \"params\":{\r\n   \t  \"originBusinessID\": \"{{OriginBusinessID}}\",\r\n      \"appointment\":{\r\n         \"start\":\"2018-02-01T13:00:00\",\r\n         \"duration\":60,\r\n         \"price\":{\r\n            \"amount\":0,\r\n            \"currency\":\"RUB\"\r\n         }\r\n      },\r\n      \"source\":\"GBOOKING_DESKTOP_WIDGET\",\r\n      \"business\":{\r\n         \"id\":\"4000000006304\"\r\n      },\r\n      \"taxonomy\":{\r\n         \"id\": \"9175160\"\r\n      },\r\n      \"client_appear\":\"NONE\",\r\n      \"resource\":{\r\n         \"id\":\"5afafbdaff64a76438ecde88\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__, __admin__ (для витрины).\n\n### Для бизнеса-витрины\n\nВ запросе на резервирование записи необходимо дополнительно указать идентификатор бизнеса-филиала __originBusinessID__, который вы можете получить в поле работника (также называется __originBusinessID__).\n\nОбязательно наличие поля __appointment.duration__, которое можно получить из набора слотов, полученных из запроса __CracSlots.GetCRACDistributedResourcesAndRooms__.\nОбязательно, чтобы при резервировании время начала слота совпадало с временем начала, полученным из запроса __CracSlots.GetCRACDistributedResourcesAndRooms__.\n\nВ запросах для отмены, изменения записи необходимо использовать идентификатор бизнеса филиала."
					},
					"response": []
				},
				{
					"name": "Добавление нового клиента",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":18,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"client.add_client\",\n   \"params\":{\n      \"business\":{\n         \"id\":\"{{BusinessID}}\"\n      },\n      \"client\":{\n         \"name\":\"new\",\n         \"surname\":\"client\",\n         \"phone\":[\n            {\n               \"country_code\":\"7\",\n               \"area_code\":\"123\",\n               \"number\":\"1231231\"\n            }\n         ],\n         \"email\": [\"new_client@mail.com\"]\n      }\n   }\n}\n"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__."
					},
					"response": []
				},
				{
					"name": "Подтверждение записи",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":19,\n   \"cred\":{},\n   \"method\":\"appointment.client_confirm_appointment\",\n   \"params\": {  \n     \"appointment\": {\n       \"id\": \"58ff7a6fde30f0b622c24926\"\n     },\n     \"client\": {\n       \"id\": \"57b467de3c27f82e221dade1\"\n     }\n   }\n}\n"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__."
					},
					"response": []
				},
				{
					"name": "Отмена записи клиентом",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":19,\r\n   \"cred\":{},\r\n   \"method\":\"appointment.cancel_appointment_by_client\",\r\n   \"params\":{\r\n     \"appointment\": {\"id\":\"{{AppointmentID}}\"},\r\n     \"client\": {\"clientID\": \"{{ClientID}}\"}\r\n   }\r\n}"
						},
						"url": {
							"raw": "http://apiv2.gbooking.ru/rpc",
							"protocol": "http",
							"host": [
								"apiv2",
								"gbooking",
								"ru"
							],
							"path": [
								"rpc"
							]
						},
						"description": "Роль доступа: __guest__."
					},
					"response": []
				},
				{
					"name": "Отмена записи бизнесом",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":19,\r\n   \"cred\":{},\r\n   \"method\":\"appointment.cancel_appointment_by_business\",\r\n   \"params\":{\r\n     \"appointment\": {\"id\":\"{{AppointmentID}}\"},\r\n     \"client\": {\"clientID\": \"{{ClientID}}\"}\r\n   }\r\n}"
						},
						"url": {
							"raw": "http://apiv2.gbooking.ru/rpc",
							"protocol": "http",
							"host": [
								"apiv2",
								"gbooking",
								"ru"
							],
							"path": [
								"rpc"
							]
						},
						"description": "Роль доступа: __admin__."
					},
					"response": []
				},
				{
					"name": "Снятие резерва с зарезервированного слота расписания",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":19,\r\n   \"cred\":{},\r\n   \"method\":\"appointment.client_remove_empty_appointment\",\r\n   \"params\": {\r\n        \"appointment\": {\r\n          \"id\": \"58ff7a6fde30f0b622c24926\"\r\n        },\r\n        \"business\": {\r\n          \"id\": \"{{BusinessID}}\"\r\n        }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __guest__."
					},
					"response": []
				},
				{
					"name": "Получение списка записей по витрине",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":1,\r\n   \"cred\":{\r\n   \t \"user\": \"{{UserID}}\",\r\n   \t \"token\": \"{{Token}}\"\r\n   },\r\n   \"method\":\"appointment.get_appointment_by_showcase\",\r\n   \"params\":{\r\n      \"business\":{\r\n         \"id\":\"{{BusinessID}}\"\r\n      },\r\n      \"pageSize\": 100500,\r\n      \"page\": 1,\r\n      \"source\": \"{{Source}}\",\r\n      \"created\": {\r\n      \t\"from\": \"2018-10-01T00:00:00\",\r\n      \t\"to\": \"2018-11-01T00:00:00\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __admin__."
					},
					"response": []
				},
				{
					"name": "Получение списка записей по бизнесу",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"id\":1,\r\n   \"cred\":{\r\n   \t \"user\": \"{{UserID}}\",\r\n   \t \"token\": \"{{Token}}\"\r\n   },\r\n   \"method\":\"appointment.get_appointment_by_filter\",\r\n   \"params\":{\r\n      \"business\":{\r\n         \"id\":\"{{BusinessID}}\"\r\n      },\r\n      \"network\": {\r\n      \t\"id\": \"{{NetworkID}}\"\r\n      },\r\n      \"extraFilters\": {\r\n      \t\"sort\": [{\r\n      \t\t\"dir\":\"desc\",\r\n      \t\t\"field\":\"created\"\r\n      \t}]\r\n      },\r\n      \"pageSize\": 100500,\r\n      \"page\": 1,\r\n      \"skipBusinessCancelled\": true,\r\n      \"filter\": {\r\n      \t\"start\": \"2018-11-01T00:00:00\",\r\n      \t\"end\": \"2018-11-07T23:59:59\",\r\n      \t\"created\": {\r\n      \t\t\"start\": \"2018-11-01T00:00:00\",\r\n\t      \t\"end\": \"2018-11-07T23:59:59\"\r\n      \t},\r\n      \t\"skipUpdated\": false,\r\n      \t\"services\": [],\r\n      \t\"workers\": []\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Бронирование записи на услугу разделена на 2 этапа — резервирование и подтверждение записи. При резервировании временной слот бронируется на некоторое непродолжительное время (~5 минут). За это время пользователь должен успеть записаться или в случае, если время истекло, повторить резервирование. На 2-м шаге (подтверждение записи) пользователь вводит свои данные в поле ввода и нажимает кнопку подтвердить. При успешном ответе запись становится постоянной.\n\n\n_Последовательность запросов для передачи записи показана на схеме:_\n\n![Appointment reservation schema](https://lh3.googleusercontent.com/Sp72irX0p-HW-_xusxuqOQUmztc6EhR9X0qXr9i4lGzhFl42NzwaJ8DnenfYChGZgMrRd7FGX9ZnCc8Q9Q2uOUgkRLd8-6yTENrRuKQEz7tILrXTuaYYqVU4pgUUFouX-jymlBrG)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "31ce5495-fa7f-4a66-ac2a-0069f835cdc9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "05084d11-b191-435e-ad9c-d70823254980",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Витрина",
			"item": [
				{
					"name": "Построение витрины для сети бизнесов",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"business.build_showcase\",\n   \"params\":{\n   \t  \"taxonomyMatching\": \"name_parent\",\n      \"network\":{\n         \"id\":\"{{NetworkID}}\"\n      },\n   \t  \"business\": {\n   \t  \t\"id\":\"{{BusinessID}}\"\n   \t  }\n   }\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __admin__.\n\nПостроение с импортом таксономий из филиалов сети «как есть»."
					},
					"response": []
				},
				{
					"name": "Построение витрины по произвольному набору филиалов",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"business.build_showcase\",\n   \"params\":{\n   \t  \"taxonomyMatching\": \"name_parent\",\n      \"originBusiness\": {\n   \t  \t\"id\": [\"4000000006290\", \"4000000006291\", \"4000000006289\"]\n   \t  },\n   \t  \"business\": {\n   \t  \t\"id\":\"{{BusinessID}}\"\n   \t  }\n   }\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __admin__.\n\nПостроение с импортом таксономий из произвольного набора бизнесов «как есть»."
					},
					"response": []
				},
				{
					"name": "Построение витрины по эксель файлу",
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"business.build_showcase\",\n   \"params\":{\n   \t  \"taxonomyMatching\": \"excel\",\n   \t  \"fileToken\": \"43373ed5e874a93202731b7678d3079fae5ef4c6\",\n   \t  \"originBusiness\": {\n   \t  \t\"id\": [\"4000000006290\", \"4000000006291\", \"4000000006289\"]\n   \t  },\n   \t  \"business\": {\n   \t  \t\"id\":\"{{BusinessID}}\"\n   \t  }\n   }\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __admin__.\n\nПостроение витрины с ремаппингом услуг через excel файл.\n\n__fileToken__ можете получить, загрузив файл с помощью запроса\n\ncurl http://apiv2.gbooking.ru/upload_temp_file -X POST -F filename=@file.xlsx"
					},
					"response": [
						{
							"name": "Пострение демо витрины из exsel файла (4000000006304)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"business.build_showcase\",\n   \"params\":{\n   \t  \"taxonomyMatching\": \"excel\",\n   \t  \"fileToken\": \"5369bcb0bd840592e9afee282b301c652f743bfa\",\n   \t  \"originBusiness\": {\n   \t  \t\"id\": [\"4000000006290\", \"4000000006291\", \"4000000006289\"]\n   \t  },\n   \t  \"business\": {\n   \t  \t\"id\":\"4000000006304\"\n   \t  },\n      \"baseBusinessID\":\"4000000006304\"\n   }\n}"
								},
								"url": {
									"raw": "{{RPC_URL}}",
									"host": [
										"{{RPC_URL}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, Authorization, Content-Length, X-Requested-With",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 15 Jun 2018 12:39:43 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=15",
									"name": "Keep-Alive",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3AEawCN5aPCk8dZrmgRSlg7zaR.XIHKkONQwpqabMdgytLnWeyPaB9R6uwt819DbNqoRao; Path=/; HttpOnly",
									"name": "Set-Cookie",
									"description": "an HTTP cookie"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								},
								{
									"key": "X-VARITI-CCR",
									"value": "229716938:1",
									"name": "X-VARITI-CCR",
									"description": "Custom header"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 08:14:07 GMT+0500 (RTZ 4 (зима))",
									"httpOnly": true,
									"domain": "api2.stage.dev.gbooking.ru",
									"path": "/",
									"secure": false,
									"value": "s%3AEawCN5aPCk8dZrmgRSlg7zaR.XIHKkONQwpqabMdgytLnWeyPaB9R6uwt819DbNqoRao",
									"key": "connect.sid"
								},
								{
									"expires": "Thu Jun 21 2018 20:38:20 GMT+0500 (RTZ 4 (зима))",
									"httpOnly": false,
									"domain": "api2.stage.dev.gbooking.ru",
									"path": "/",
									"secure": false,
									"value": "AAAAAFsEOWwqQzJ2A0e9Ag==",
									"key": "rerf"
								}
							],
							"body": "{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":{\"queued\":true,\"jobID\":\"5b23b38f6f3aac47700ced6d\"}}"
						}
					]
				},
				{
					"name": "Постраничная загрузка работников",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7088b18-e29c-4a6f-9010-ce088a5056d1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    console.error('processing');",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var data = pm.response.json();",
									"   _.sortBy(data.result, (r) => r.order).forEach((r) => {",
									"     console.log(r.id + '|' + r.name + ' ' + r.surname);",
									"   });",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"resource.get_showcase_resources\",\n   \"params\":{\n   \t  \"page\": 0,\n   \t  \"pageSize\": 100500,\n   \t  \"worker_sorting_type\": \"workload\",\n   \t  \"business\": {\n   \t  \t\"id\":\"{{BusinessID}}\"\n   \t  },\n   \t  \"taxonomy\": {\n   \t  \t\"id\": \"9165602\"\n   \t  }\n   }\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __admin__."
					},
					"response": []
				},
				{
					"name": "Проверка целостности витрины",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"id\":1,\n   \"cred\":{\n      \"token\":\"{{Token}}\",\n      \"user\":\"{{UserID}}\"\n   },\n   \"method\":\"business.check_showcase\",\n   \"params\":{\n   \t  \"business\": {\n   \t  \t\"id\":\"{{BusinessID}}\"\n   \t  }\n   }\n}"
						},
						"url": {
							"raw": "{{RPC_URL}}",
							"host": [
								"{{RPC_URL}}"
							]
						},
						"description": "Роль доступа: __admin__."
					},
					"response": []
				}
			],
			"description": "Витрина - это унифицированный доступ к данным и записи сразу некоторого набора бизнесов-филиалов. Доступ к данным витрины похож на получение данных к одному филиалу (запрос __business.get_profile_by_id__) за исключением некоторых различий, о которых ниже.\n\nВитрина предоставляет доступ к данным реальных бизнесов-филиалов, но не хранит данные в себе. При резервировании записи, данные передаются в бизнес. Пользователи витрины не имеют доступа к данным бизнесов (только к публичным).\n\nДля инициализации данных витрины необходимо выполнить запрос на построение витрины __business.build_showcase__. Возможны 2 варианта вызова — с указанием excel файла ремаппинга услуг и без него (с импортом таксономий как есть). После вызова данного метода консистентность данных витрины поддерживается автоматически — нет необходимости вызывать его снова для этого. Также данный метод обладает свойством идемпотентности — в случае необходимости возможно вызвать его для восстановления данных витрины.\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c184e65d-400a-4115-a709-1d244e9c359c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "56d1cc76-6fd8-419d-93cf-ef9bdf14c4dd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3a4869d0-c262-4a2b-ac46-d4fda901648a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ed6ea016-a7aa-4b2c-81cd-10990711a0ec",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}